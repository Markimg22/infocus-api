generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id               String       @id @unique @default(uuid())
  name             String
  email            String       @unique
  password         String
  emailConfirmated Boolean      @default(false) @map("email_confirmated")
  accessToken      AccessToken?
  tasks            Tasks[]
  performance      Performance?
  createdAt        DateTime     @default(now()) @map("created_at")
  updatedAt        DateTime     @updatedAt @map("updated_at")

  @@map("users")
}

model AccessToken {
  id        String   @id @unique @default(uuid())
  token     String   @unique
  user      Users    @relation(fields: [userId], references: [id])
  userId    String   @unique @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("access_token")
}

model Tasks {
  id          String   @id @unique @default(uuid())
  title       String
  description String   @default("")
  finished    Boolean  @default(false)
  user        Users    @relation(fields: [userId], references: [id])
  userId      String   @map("user_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("tasks")
}

model Performance {
  id                 String   @id @unique @default(uuid())
  totalWorkTime      Int      @default(0) @map("total_work_time")
  totalRestTime      Int      @default(0) @map("total_rest_time")
  totalTasksFinished Int      @default(0) @map("total_tasks_finished")
  user               Users    @relation(fields: [userId], references: [id])
  userId             String   @unique @map("user_id")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  @@map("performance")
}
